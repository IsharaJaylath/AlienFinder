{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.componnt.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAKaA,G,MAAM,SAACC,GAAD,OACf,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAML,EAAMI,QAAQE,OACpB,6BAAKN,EAAMI,QAAQG,aCJZC,G,MAAY,SAACR,GAEzB,OAAO,qBAAKC,UAAU,YAAf,SAECD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAC1B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCNfM,G,YAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACrB,uBACAZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCoCCG,E,kDAvCZ,aAAc,IAAD,8BACX,gBAaFH,aAAc,SAAAI,GACR,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAbxC,EAAKC,MAAO,CACVb,SAAS,GACTU,YAAY,IAJH,E,gEAQO,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAASkB,S,+BAMhC,IAAD,EACwBC,KAAKN,MAA5Bb,EADD,EACCA,SAASU,EADV,EACUA,YACVU,EAAkBpB,EAASqB,QAAO,SAAA1B,GAAO,OAC9CA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBAEjD,OACC,sBAAK9B,UAAU,MAAf,UACE,8CACF,cAAC,EAAD,CACAW,YAAY,gBACZC,aAAce,KAAKf,eAEnB,cAAC,EAAD,CAAUJ,SAAUoB,W,GA9BPI,aCOJC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5dc8c07c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.styles.css';\r\n\r\n\r\nexport const Card =(props) =>(\r\n    <div className='card-container'>\r\n      <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set6&size=150x150`}/>\r\n      <h2 >{props.monster.name}</h2>\r\n      <h3>{props.monster.email}</h3>\r\n    </div>\r\n)","import React from 'react';\r\nimport {Card} from '../card/card.component';\r\nimport './card-list.styles.css';\r\n\r\n\r\nexport const CardList =  (props) =>{\r\n\r\n return <div className='card-list'> \r\n       {\r\n         props.monsters.map(monster =>(\r\n         <Card key={monster.id} monster={monster}/>\r\n          ))\r\n       }</div>\r\n\r\n}\r\n  \r\n","import React from 'react';\r\n\r\nimport './search-box.styles.css'\r\n\r\nexport const SearchBox = ({placeholder,handleChange}) =>(\r\n    <input \r\n    className='search'\r\n    type='search' \r\n    placeholder={placeholder} \r\n    onChange={handleChange}\r\n    />\r\n)","import React, {Component} from 'react';\nimport {CardList} from './components/card-list/card-list.componnt'\nimport './App.css';\nimport { SearchBox } from './components/search-box/search-box.component';\n\n class App extends Component{\n   constructor(){\n     super();\n     this.state ={\n       monsters:[],\n       searchField:''\n     }\n   }\n\n   componentDidMount(){\n     fetch('https://jsonplaceholder.typicode.com/users')\n     .then(response => response.json())\n     .then(users => this.setState({monsters:users})) ;  \n     \n   }\n   handleChange =e =>{\n         this.setState({searchField:e.target.value});\n   };\n   render(){\n     const {monsters,searchField} =this.state;\n     const filteredMonsters =monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n      )\n     return(\n      <div className=\"App\">\n        <h1>Alien Finder</h1>\n      <SearchBox\n      placeholder='search Aliens'\n      handleChange={this.handleChange}\n      />\n      <CardList monsters={filteredMonsters}>\n      \n      </CardList>\n      \n    </div>\n     )\n     }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}